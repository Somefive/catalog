apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: o11y-system
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
    spec:
      serviceAccountName: grafana
      initContainers:
        - name: install-kubernetes-api
          image: busybox:1.35.0
          args:
          - sh
          - -c
          - |
            export KUBE_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            cat /template.yaml | \
            sed -r 's/\$KUBERNETES_SERVICE_HOST/'"$KUBERNETES_SERVICE_HOST"'/g' | \
            sed -r 's/\$KUBERNETES_SERVICE_PORT/'"$KUBERNETES_SERVICE_PORT"'/g' | \
            sed -r 's/\$KUBE_TOKEN/'"$KUBE_TOKEN"'/g' \
            > /kubernetes-api/kubernetes-api.yaml
          volumeMounts:
            - name: config
              mountPath: "/template.yaml"
              subPath: kubernetes-api.yaml
            - name: kubernetes-api-config
              mountPath: "/kubernetes-api"
      containers:
        - name: grafana
          image: "grafana/grafana:8.5.3"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/prometheus.yaml"
              subPath: prometheus.yaml
            - name: kubernetes-api-config
              mountPath: "/etc/grafana/provisioning/datasources/kubernetes-api.yaml"
              subPath: kubernetes-api.yaml
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboards.yaml"
              subPath: dashboards.yaml
            - name: dashboards
              mountPath: "/etc/dashboards/internal"
            - name: storage
              mountPath: "/var/lib/grafana"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "kubevela"
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_INSTALL_PLUGINS
              value: marcusolsson-json-datasource
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: dashboards
          configMap:
            name: grafana-dashboards
        - name: storage
          emptyDir: {}
        - name: kubernetes-api-config
          emptyDir: {}