apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: o11n-system
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus-server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/instance: prometheus-server
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/instance: prometheus-server
    spec:
      serviceAccountName: prometheus-server
      initContainers:
      containers:
        - name: prometheus-server
          image: "quay.io/prometheus/prometheus:v2.34.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-server
        - name: storage-volume
          emptyDir: {}
